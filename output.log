ERROR?  null
DATA?  { name: 'auditjs',
  version: '2.2.2',
  description: 'Audit dependencies to identify known vulnerabilities and maintenance problems',
  main: 'audit-package.js',
  bin: { auditjs: './audit.js', 'auditjs-win': './auditjs.js' },
  preferGlobal: true,
  scripts: 
   { pretest: 'node audit.js -r -n -p test_data/package.json -w test_data/audit_package_whitelist.json || true &&  node audit.js -r -b -p test_data/bower.json || true',
     test: 'diff reports/bower.xml test_data/expected_reports/bower.xml && diff reports/package.xml test_data/expected_reports/package.xml',
     'update-tests': 'npm run pretest && cp reports/*.xml test_data/expected_reports/' },
  keywords: [ 'Audit', 'Vulnerability', 'CPE', 'CVE' ],
  author: { name: 'OSS Index' },
  license: 'BSD-3-Clause',
  repository: 
   { type: 'git',
     url: 'git+https://github.com/OSSIndex/auditjs.git' },
  dependencies: 
   { colors: 
      { _from: 'colors@^1.1.2',
        _id: 'colors@1.1.2',
        _inBundle: false,
        _integrity: 'sha1-FopHAXVran9RoSzgyXv6KMCE7WM=',
        _location: '/colors',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/colors/-/colors-1.1.2.tgz',
        _shasum: '168a4701756b6a7f51a12ce0c97bfa28c084ed63',
        _spec: 'colors@^1.1.2',
        _where: '/Users/tom.klancer/repo/auditjs',
        author: [Object],
        bugs: [Object],
        bundleDependencies: false,
        deprecated: false,
        description: 'get colors in your node.js console',
        engines: [Object],
        files: [Array],
        homepage: 'https://github.com/Marak/colors.js',
        keywords: [Array],
        license: 'MIT',
        main: 'lib',
        name: 'colors',
        repository: [Object],
        scripts: [Object],
        version: '1.1.2',
        readme: '# colors.js [![Build Status](https://travis-ci.org/Marak/colors.js.svg?branch=master)](https://travis-ci.org/Marak/colors.js)\n\n## get color and style in your node.js console\n\n![Demo](https://raw.githubusercontent.com/Marak/colors.js/master/screenshots/colors.png)\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n### text colors\n\n  - black\n  - red\n  - green\n  - yellow\n  - blue\n  - magenta\n  - cyan\n  - white\n  - gray\n  - grey\n\n### background colors\n\n  - bgBlack\n  - bgRed\n  - bgGreen\n  - bgYellow\n  - bgBlue\n  - bgMagenta\n  - bgCyan\n  - bgWhite\n\n### styles\n\n  - reset\n  - bold\n  - dim\n  - italic\n  - underline\n  - inverse\n  - hidden\n  - strikethrough\n\n### extras\n\n  - rainbow\n  - zebra\n  - america\n  - trap\n  - random\n\n\n## Usage\n\nBy popular demand, `colors` now ships with two types of usages!\n\nThe super nifty way\n\n```js\nvar colors = require(\'colors\');\n\nconsole.log(\'hello\'.green); // outputs green text\nconsole.log(\'i like cake and pies\'.underline.red) // outputs red underlined text\nconsole.log(\'inverse the color\'.inverse); // inverses the color\nconsole.log(\'OMG Rainbows!\'.rainbow); // rainbow\nconsole.log(\'Run the trap\'.trap); // Drops the bass\n\n```\n\nor a slightly less nifty way which doesn\'t extend `String.prototype`\n\n```js\nvar colors = require(\'colors/safe\');\n\nconsole.log(colors.green(\'hello\')); // outputs green text\nconsole.log(colors.red.underline(\'i like cake and pies\')) // outputs red underlined text\nconsole.log(colors.inverse(\'inverse the color\')); // inverses the color\nconsole.log(colors.rainbow(\'OMG Rainbows!\')); // rainbow\nconsole.log(colors.trap(\'Run the trap\')); // Drops the bass\n\n```\n\nI prefer the first way. Some people seem to be afraid of extending `String.prototype` and prefer the second way. \n\nIf you are writing good code you will never have an issue with the first approach. If you really don\'t want to touch `String.prototype`, the second usage will not touch `String` native object.\n\n## Disabling Colors\n\nTo disable colors you can pass the following arguments in the command line to your application:\n\n```bash\nnode myapp.js --no-color\n```\n\n## Console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data)\n\n```js\nvar name = \'Marak\';\nconsole.log(colors.green(\'Hello %s\'), name);\n// outputs -> \'Hello Marak\'\n```\n\n## Custom themes\n\n### Using standard API\n\n```js\n\nvar colors = require(\'colors\');\n\ncolors.setTheme({\n  silly: \'rainbow\',\n  input: \'grey\',\n  verbose: \'cyan\',\n  prompt: \'grey\',\n  info: \'green\',\n  data: \'grey\',\n  help: \'cyan\',\n  warn: \'yellow\',\n  debug: \'blue\',\n  error: \'red\'\n});\n\n// outputs red text\nconsole.log("this is an error".error);\n\n// outputs yellow text\nconsole.log("this is a warning".warn);\n```\n\n### Using string safe API\n\n```js\nvar colors = require(\'colors/safe\');\n\n// set single property\nvar error = colors.red;\nerror(\'this is red\');\n\n// set theme\ncolors.setTheme({\n  silly: \'rainbow\',\n  input: \'grey\',\n  verbose: \'cyan\',\n  prompt: \'grey\',\n  info: \'green\',\n  data: \'grey\',\n  help: \'cyan\',\n  warn: \'yellow\',\n  debug: \'blue\',\n  error: \'red\'\n});\n\n// outputs red text\nconsole.log(colors.error("this is an error"));\n\n// outputs yellow text\nconsole.log(colors.warn("this is a warning"));\n\n```\n\nYou can also combine them:\n\n```javascript\nvar colors = require(\'colors\');\n\ncolors.setTheme({\n  custom: [\'red\', \'underline\']\n});\n\nconsole.log(\'test\'.custom);\n```\n\n*Protip: There is a secret undocumented style in `colors`. If you find the style you can summon him.*\n',
        readmeFilename: 'ReadMe.md',
        dependencies: {},
        devDependencies: {},
        optionalDependencies: {},
        _dependencies: {},
        path: '/Users/tom.klancer/repo/auditjs/node_modules/colors',
        error: null,
        extraneous: false },
     commander: 
      { _from: 'commander@^2.9.0',
        _id: 'commander@2.11.0',
        _inBundle: false,
        _integrity: 'sha512-b0553uYA5YAEGgyYIGYROzKQ7X5RAqedkfjiZxwi0kL1g3bOaBNNZfYkzt/CL0umgD5wc9Jec2FbB98CjkMRvQ==',
        _location: '/commander',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/commander/-/commander-2.11.0.tgz',
        _shasum: '157152fd1e7a6c8d98a5b715cf376df928004563',
        _spec: 'commander@^2.9.0',
        _where: '/Users/tom.klancer/repo/auditjs',
        author: [Object],
        bugs: [Object],
        bundleDependencies: false,
        dependencies: {},
        deprecated: false,
        description: 'the complete solution for node.js command-line programs',
        devDependencies: [Object],
        files: [Array],
        homepage: 'https://github.com/tj/commander.js#readme',
        keywords: [Array],
        license: 'MIT',
        main: 'index',
        name: 'commander',
        repository: [Object],
        scripts: [Object],
        version: '2.11.0',
        readme: '# Commander.js\n\n\n[![Build Status](https://api.travis-ci.org/tj/commander.js.svg?branch=master)](http://travis-ci.org/tj/commander.js)\n[![NPM Version](http://img.shields.io/npm/v/commander.svg?style=flat)](https://www.npmjs.org/package/commander)\n[![NPM Downloads](https://img.shields.io/npm/dm/commander.svg?style=flat)](https://www.npmjs.org/package/commander)\n[![Join the chat at https://gitter.im/tj/commander.js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/tj/commander.js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n  The complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby\'s [commander](https://github.com/commander-rb/commander).  \n  [API documentation](http://tj.github.com/commander.js/)\n\n\n## Installation\n\n    $ npm install commander --save\n\n## Option parsing\n\n Options with commander are defined with the `.option()` method, also serving as documentation for the options. The example below parses args and options from `process.argv`, leaving remaining args as the `program.args` array which were not consumed by options.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require(\'commander\');\n\nprogram\n  .version(\'0.1.0\')\n  .option(\'-p, --peppers\', \'Add peppers\')\n  .option(\'-P, --pineapple\', \'Add pineapple\')\n  .option(\'-b, --bbq-sauce\', \'Add bbq sauce\')\n  .option(\'-c, --cheese [type]\', \'Add the specified type of cheese [marble]\', \'marble\')\n  .parse(process.argv);\n\nconsole.log(\'you ordered a pizza with:\');\nif (program.peppers) console.log(\'  - peppers\');\nif (program.pineapple) console.log(\'  - pineapple\');\nif (program.bbqSauce) console.log(\'  - bbq\');\nconsole.log(\'  - %s cheese\', program.cheese);\n```\n\n Short flags may be passed as a single arg, for example `-abc` is equivalent to `-a -b -c`. Multi-word options such as "--template-engine" are camel-cased, becoming `program.templateEngine` etc.\n\n\n## Coercion\n\n```js\nfunction range(val) {\n  return val.split(\'..\').map(Number);\n}\n\nfunction list(val) {\n  return val.split(\',\');\n}\n\nfunction collect(val, memo) {\n  memo.push(val);\n  return memo;\n}\n\nfunction increaseVerbosity(v, total) {\n  return total + 1;\n}\n\nprogram\n  .version(\'0.1.0\')\n  .usage(\'[options] <file ...>\')\n  .option(\'-i, --integer <n>\', \'An integer argument\', parseInt)\n  .option(\'-f, --float <n>\', \'A float argument\', parseFloat)\n  .option(\'-r, --range <a>..<b>\', \'A range\', range)\n  .option(\'-l, --list <items>\', \'A list\', list)\n  .option(\'-o, --optional [value]\', \'An optional value\')\n  .option(\'-c, --collect [value]\', \'A repeatable value\', collect, [])\n  .option(\'-v, --verbose\', \'A value that can be increased\', increaseVerbosity, 0)\n  .parse(process.argv);\n\nconsole.log(\' int: %j\', program.integer);\nconsole.log(\' float: %j\', program.float);\nconsole.log(\' optional: %j\', program.optional);\nprogram.range = program.range || [];\nconsole.log(\' range: %j..%j\', program.range[0], program.range[1]);\nconsole.log(\' list: %j\', program.list);\nconsole.log(\' collect: %j\', program.collect);\nconsole.log(\' verbosity: %j\', program.verbose);\nconsole.log(\' args: %j\', program.args);\n```\n\n## Regular Expression\n```js\nprogram\n  .version(\'0.1.0\')\n  .option(\'-s --size <size>\', \'Pizza size\', /^(large|medium|small)$/i, \'medium\')\n  .option(\'-d --drink [drink]\', \'Drink\', /^(coke|pepsi|izze)$/i)\n  .parse(process.argv);\n  \nconsole.log(\' size: %j\', program.size);\nconsole.log(\' drink: %j\', program.drink);\n```\n\n## Variadic arguments\n\n The last argument of a command can be variadic, and only the last argument.  To make an argument variadic you have to\n append `...` to the argument name.  Here is an example:\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require(\'commander\');\n\nprogram\n  .version(\'0.1.0\')\n  .command(\'rmdir <dir> [otherDirs...]\')\n  .action(function (dir, otherDirs) {\n    console.log(\'rmdir %s\', dir);\n    if (otherDirs) {\n      otherDirs.forEach(function (oDir) {\n        console.log(\'rmdir %s\', oDir);\n      });\n    }\n  });\n\nprogram.parse(process.argv);\n```\n\n An `Array` is used for the value of a variadic argument.  This applies to `program.args` as well as the argument passed\n to your action as demonstrated above.\n\n## Specify the argument syntax\n\n```js\n#!/usr/bin/env node\n\nvar program = require(\'commander\');\n\nprogram\n  .version(\'0.1.0\')\n  .arguments(\'<cmd> [env]\')\n  .action(function (cmd, env) {\n     cmdValue = cmd;\n     envValue = env;\n  });\n\nprogram.parse(process.argv);\n\nif (typeof cmdValue === \'undefined\') {\n   console.error(\'no command given!\');\n   process.exit(1);\n}\nconsole.log(\'command:\', cmdValue);\nconsole.log(\'environment:\', envValue || "no environment given");\n```\nAngled brackets (e.g. `<cmd>`) indicate required input. Square brackets (e.g. `[env]`) indicate optional input.\n\n## Git-style sub-commands\n\n```js\n// file: ./examples/pm\nvar program = require(\'commander\');\n\nprogram\n  .version(\'0.1.0\')\n  .command(\'install [name]\', \'install one or more packages\')\n  .command(\'search [query]\', \'search with optional query\')\n  .command(\'list\', \'list packages installed\', {isDefault: true})\n  .parse(process.argv);\n```\n\nWhen `.command()` is invoked with a description argument, no `.action(callback)` should be called to handle sub-commands, otherwise there will be an error. This tells commander that you\'re going to use separate executables for sub-commands, much like `git(1)` and other popular tools.  \nThe commander will try to search the executables in the directory of the entry script (like `./examples/pm`) with the name `program-command`, like `pm-install`, `pm-search`.\n\nOptions can be passed with the call to `.command()`. Specifying `true` for `opts.noHelp` will remove the option from the generated help output. Specifying `true` for `opts.isDefault` will run the subcommand if no other subcommand is specified.\n\nIf the program is designed to be installed globally, make sure the executables have proper modes, like `755`.\n\n### `--harmony`\n\nYou can enable `--harmony` option in two ways:\n* Use `#! /usr/bin/env node --harmony` in the sub-commands scripts. Note some os version don’t support this pattern.\n* Use the `--harmony` option when call the command, like `node --harmony examples/pm publish`. The `--harmony` option will be preserved when spawning sub-command process.\n\n## Automated --help\n\n The help information is auto-generated based on the information commander already knows about your program, so the following `--help` info is for free:\n\n```  \n $ ./examples/pizza --help\n\n   Usage: pizza [options]\n\n   An application for pizzas ordering\n\n   Options:\n\n     -h, --help           output usage information\n     -V, --version        output the version number\n     -p, --peppers        Add peppers\n     -P, --pineapple      Add pineapple\n     -b, --bbq            Add bbq sauce\n     -c, --cheese <type>  Add the specified type of cheese [marble]\n     -C, --no-cheese      You do not want any cheese\n\n```\n\n## Custom help\n\n You can display arbitrary `-h, --help` information\n by listening for "--help". Commander will automatically\n exit once you are done so that the remainder of your program\n does not execute causing undesired behaviours, for example\n in the following executable "stuff" will not output when\n `--help` is used.\n\n```js\n#!/usr/bin/env node\n\n/**\n * Module dependencies.\n */\n\nvar program = require(\'commander\');\n\nprogram\n  .version(\'0.1.0\')\n  .option(\'-f, --foo\', \'enable some foo\')\n  .option(\'-b, --bar\', \'enable some bar\')\n  .option(\'-B, --baz\', \'enable some baz\');\n\n// must be before .parse() since\n// node\'s emit() is immediate\n\nprogram.on(\'--help\', function(){\n  console.log(\'  Examples:\');\n  console.log(\'\');\n  console.log(\'    $ custom-help --help\');\n  console.log(\'    $ custom-help -h\');\n  console.log(\'\');\n});\n\nprogram.parse(process.argv);\n\nconsole.log(\'stuff\');\n```\n\nYields the following help output when `node script-name.js -h` or `node script-name.js --help` are run:\n\n```\n\nUsage: custom-help [options]\n\nOptions:\n\n  -h, --help     output usage information\n  -V, --version  output the version number\n  -f, --foo      enable some foo\n  -b, --bar      enable some bar\n  -B, --baz      enable some baz\n\nExamples:\n\n  $ custom-help --help\n  $ custom-help -h\n\n```\n\n## .outputHelp(cb)\n\nOutput help information without exiting.\nOptional callback cb allows post-processing of help text before it is displayed.\n\nIf you want to display help by default (e.g. if no command was provided), you can use something like:\n\n```js\nvar program = require(\'commander\');\nvar colors = require(\'colors\');\n\nprogram\n  .version(\'0.1.0\')\n  .command(\'getstream [url]\', \'get stream URL\')\n  .parse(process.argv);\n\n  if (!process.argv.slice(2).length) {\n    program.outputHelp(make_red);\n  }\n\nfunction make_red(txt) {\n  return colors.red(txt); //display the help text in red on the console\n}\n```\n\n## .help(cb)\n\n  Output help information and exit immediately.\n  Optional callback cb allows post-processing of help text before it is displayed.\n\n## Examples\n\n```js\nvar program = require(\'commander\');\n\nprogram\n  .version(\'0.1.0\')\n  .option(\'-C, --chdir <path>\', \'change the working directory\')\n  .option(\'-c, --config <path>\', \'set config path. defaults to ./deploy.conf\')\n  .option(\'-T, --no-tests\', \'ignore test hook\');\n\nprogram\n  .command(\'setup [env]\')\n  .description(\'run setup commands for all envs\')\n  .option("-s, --setup_mode [mode]", "Which setup mode to use")\n  .action(function(env, options){\n    var mode = options.setup_mode || "normal";\n    env = env || \'all\';\n    console.log(\'setup for %s env(s) with %s mode\', env, mode);\n  });\n\nprogram\n  .command(\'exec <cmd>\')\n  .alias(\'ex\')\n  .description(\'execute the given remote cmd\')\n  .option("-e, --exec_mode <mode>", "Which exec mode to use")\n  .action(function(cmd, options){\n    console.log(\'exec "%s" using %s mode\', cmd, options.exec_mode);\n  }).on(\'--help\', function() {\n    console.log(\'  Examples:\');\n    console.log();\n    console.log(\'    $ deploy exec sequential\');\n    console.log(\'    $ deploy exec async\');\n    console.log();\n  });\n\nprogram\n  .command(\'*\')\n  .action(function(env){\n    console.log(\'deploying "%s"\', env);\n  });\n\nprogram.parse(process.argv);\n```\n\nMore Demos can be found in the [examples](https://github.com/tj/commander.js/tree/master/examples) directory.\n\n## License\n\nMIT\n',
        readmeFilename: 'Readme.md',
        optionalDependencies: {},
        _dependencies: {},
        path: '/Users/tom.klancer/repo/auditjs/node_modules/commander',
        error: null,
        extraneous: false },
     'html-entities': 
      { _from: 'html-entities@^1.2.0',
        _id: 'html-entities@1.2.1',
        _inBundle: false,
        _integrity: 'sha1-DfKTUfByEWNRXfueVUPl9u7VFi8=',
        _location: '/html-entities',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/html-entities/-/html-entities-1.2.1.tgz',
        _shasum: '0df29351f0721163515dfb9e5543e5f6eed5162f',
        _spec: 'html-entities@^1.2.0',
        _where: '/Users/tom.klancer/repo/auditjs',
        author: [Object],
        bugs: [Object],
        bundleDependencies: false,
        dependencies: {},
        deprecated: false,
        description: 'Faster HTML entities encode/decode library.',
        devDependencies: [Object],
        engines: [Array],
        files: [Array],
        homepage: 'https://github.com/mdevils/node-html-entities#readme',
        keywords: [Array],
        license: 'MIT',
        main: 'index',
        name: 'html-entities',
        repository: [Object],
        scripts: [Object],
        'unit-coverage': [Object],
        version: '1.2.1',
        readme: 'node-html-entities\n==================\n\n[![Build Status](https://travis-ci.org/mdevils/node-html-entities.svg?branch=master)](https://travis-ci.org/mdevils/node-html-entities)\n[![Coverage Status](https://coveralls.io/repos/mdevils/node-html-entities/badge.svg?branch=master&service=github)](https://coveralls.io/github/mdevils/node-html-entities?branch=master)\n\nFast html entities library.\n\n\nInstallation\n------------\n\n```bash\n$ npm install html-entities\n```\n\nUsage\n-----\n\n**XML entities**\n\nHTML validity and XSS attack prevention you can achieve from XmlEntities class.\n\n```javascript\nconst Entities = require(\'html-entities\').XmlEntities;\n\nconst entities = new Entities();\n\nconsole.log(entities.encode(\'<>"\\\'&©®\')); // &lt;&gt;&quot;&apos;&amp;©®\nconsole.log(entities.encodeNonUTF(\'<>"\\\'&©®\')); // &lt;&gt;&quot;&apos;&amp;&#169;&#174;\nconsole.log(entities.encodeNonASCII(\'<>"\\\'&©®\')); // <>"\\\'&©®\nconsole.log(entities.decode(\'&lt;&gt;&quot;&apos;&amp;&copy;&reg;&#8710;\')); // <>"\'&&copy;&reg;∆\n```\n\n**All HTML entities encoding/decoding**\n\n\n```javascript\nconst Entities = require(\'html-entities\').AllHtmlEntities;\n\nconst entities = new Entities();\n\nconsole.log(entities.encode(\'<>"&©®∆\')); // &lt;&gt;&quot;&amp;&copy;&reg;∆\nconsole.log(entities.encodeNonUTF(\'<>"&©®∆\')); // &lt;&gt;&quot;&amp;&copy;&reg;&#8710;\nconsole.log(entities.encodeNonASCII(\'<>"&©®∆\')); // <>"&©®&#8710;\nconsole.log(entities.decode(\'&lt;&gt;&quot;&amp;&copy;&reg;\')); // <>"&©®\n```\n\n**Available classes**\n\n```javascript\nconst XmlEntities = require(\'html-entities\').XmlEntities, // <>"\'& + &#...; decoding\n      Html4Entities = require(\'html-entities\').Html4Entities, // HTML4 entities.\n      Html5Entities = require(\'html-entities\').Html5Entities, // HTML5 entities.\n      AllHtmlEntities = require(\'html-entities\').AllHtmlEntities; // Synonym for HTML5 entities.\n```\n\nSupports four methods for every class:\n\n* encode — encodes, replacing characters to its entity representations. Ignores UTF characters with no entity representation.\n* encodeNonUTF — encodes, replacing characters to its entity representations. Inserts numeric entities for UTF characters.\n* encodeNonASCII — encodes, replacing only non-ASCII characters to its numeric entity representations.\n* decode — decodes, replacing entities to characters. Unknown entities are left as is.\n',
        readmeFilename: 'README.md',
        optionalDependencies: {},
        _dependencies: {},
        path: '/Users/tom.klancer/repo/auditjs/node_modules/html-entities',
        error: null,
        extraneous: false },
     jsontoxml: 
      { _from: 'jsontoxml@0.0.11',
        _id: 'jsontoxml@0.0.11',
        _inBundle: false,
        _integrity: 'sha1-Nzq1sgcL43N6X7PjL9G3uBhwyqQ=',
        _location: '/jsontoxml',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/jsontoxml/-/jsontoxml-0.0.11.tgz',
        _shasum: '373ab5b2070be3737a5fb3e32fd1b7b81870caa4',
        _spec: 'jsontoxml@0.0.11',
        _where: '/Users/tom.klancer/repo/auditjs',
        bugs: [Object],
        bundleDependencies: false,
        deprecated: false,
        description: 'This is a library designed to render js objects as xml. Its not made to parse or otherwise edit existing xml/html structures.',
        devDependencies: [Object],
        engines: [Object],
        homepage: 'http://github.com/ken-franken/node-jsontoxml',
        license: 'MIT',
        main: './jsontoxml.js',
        name: 'jsontoxml',
        people: [Object],
        repository: [Object],
        scripts: [Object],
        testling: [Object],
        version: '0.0.11',
        readme: '[![Build Status](https://secure.travis-ci.org/soldair/node-jsontoxml.png)](http://travis-ci.org/soldair/node-jsontoxml)\n\n[![browser support](http://ci.testling.com/soldair/node-jsontoxml.png)](http://ci.testling.com/soldair/node-jsontoxml)\n\n# jsontoxml\n\nThis is a library designed to render js objects as xml. Its not made to parse or otherwise edit existing xml/html structures.\nFor that and perhaps as a compliment to this you can use jsdom or xml2js for editing existing markup.\n\nthis will do a good job rendering json as xml but apis that require xml expect odd things mostly related to elements with attributes and implicit array like keys that make formatting your json a little tricky.\n\n## example\n\n```js\nvar jsonxml = require(\'jsontoxml\');\n\nvar xml = jsonxml({\n\tnode:\'text content\',\n\tparent:[\n\t\t{name:\'taco\',text:\'beef taco\',children:{salsa:\'hot!\'}},\n\t\t{name:\'taco\',text:\'fish taco\',attrs:{mood:\'sad\'},children:[\n\t\t\t{name:\'salsa\',text:\'mild\'},\n\t\t\t\'hi\',\n\t\t\t{name:\'salsa\',text:\'weak\',attrs:{type:2}}\n\t\t]},\n\t\t{name:\'taco\',attrs:\'mood="party!"\'}\n\t],\n\tparent2:{\n\t\thi:\'is a nice thing to say\',\n\t\tnode:\'i am another not special child node\'\n\t\tdate:function(){\n\t\t\treturn (new Date())+\'\';\n\t\t}\n\t}\n})\n\nconsole.log(xml);\n\n```\n\noutputs:\n```xml\n<node>text content</node>\n<parent>\n\t<taco>\n\t\tbeef taco\n\t\t<salsa>hot!</salsa>\n\t</taco>\n\t<taco mood=\'sad\'>\n\t\tfish taco\n\t\t<salsa>mild</salsa>\n\t\thi\n\t\t<salsa type="2">weak</salsa>\n\t</taco>\n\t<taco mood=\'party!\'/>\n</parent>\n<parent2>\n\t<hi>is a nice thing to say</hi>\n\t<node>i am another not special child node</node>\n\t<date>Sun Sep 26 2010 17:27:29 GMT-0700 (PDT)</date>\n</parent2>\n```\n## API\n\n`jsontoxml (obj,options)`\n\n* a valid json structure to interpret or a json string\n* returns an xml string\n  * `options` is optional. it can be true (add generic xml header) or an object. If an object, valid options are:\n    - `escape`\n      * calls escape on all values\n      * attribute values if attribute values are specified as an object\n    - `xmlHeader` can either be boolan (add generic `<?xml …?>` header) or an object. If an object valid options are:\n      - `standalone` if true, the `<?xml …?>` gets an additional attribute       `standalone="true"`.\n    - `docType` if defined gets added as the `<!DOCTYPE …>` contents (unescaped).\n    - `prettyPrint` if truthy the output gets a rudimentary pretty print (good for debugging, don\'t expect too much)\n    - `indent` specify what unit you would like to indent by (spaces, tabstop, nothing - pass an empty string)\n    - `removeIllegalNameCharacters` replace illegal XML element Name characters with \'_\'\n\n\n`jsontoxml.escape (string)`\n\n* returns string with xml entities escaped\n* escapes `"" & < >`\n\n`jsontoxml.cdata (string)`\n\n * wraps string with `<![CDATA[ ]]>`\n * removes all occurences of close cdata (`]]>`) in input text\n\n## more description\n\nI made this because i wanted to abstract away the fact that antiquated external systems require post data as xml and i wanted to expose a standard js calling api like my other interfaces.\n\nI did not want to instantiate an entire dom to perform simple updates to tags in lower level functions (like injecting api keys) when top level api call specific functions start building the xml string.\n\n\n',
        readmeFilename: 'README.md',
        dependencies: {},
        optionalDependencies: {},
        _dependencies: {},
        path: '/Users/tom.klancer/repo/auditjs/node_modules/jsontoxml',
        error: null,
        extraneous: false },
     mkdirp: 
      { _from: 'mkdirp@^0.5.1',
        _id: 'mkdirp@0.5.1',
        _inBundle: false,
        _integrity: 'sha1-MAV0OOrGz3+MR2fzhkjWaX11yQM=',
        _location: '/mkdirp',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz',
        _shasum: '30057438eac6cf7f8c4767f38648d6697d75c903',
        _spec: 'mkdirp@^0.5.1',
        _where: '/Users/tom.klancer/repo/auditjs',
        author: [Object],
        bin: [Object],
        bugs: [Object],
        bundleDependencies: false,
        dependencies: [Object],
        deprecated: false,
        description: 'Recursively mkdir, like `mkdir -p`',
        devDependencies: [Object],
        homepage: 'https://github.com/substack/node-mkdirp#readme',
        keywords: [Array],
        license: 'MIT',
        main: 'index.js',
        name: 'mkdirp',
        repository: [Object],
        scripts: [Object],
        version: '0.5.1',
        readme: '# mkdirp\n\nLike `mkdir -p`, but in node.js!\n\n[![build status](https://secure.travis-ci.org/substack/node-mkdirp.png)](http://travis-ci.org/substack/node-mkdirp)\n\n# example\n\n## pow.js\n\n```js\nvar mkdirp = require(\'mkdirp\');\n    \nmkdirp(\'/tmp/foo/bar/baz\', function (err) {\n    if (err) console.error(err)\n    else console.log(\'pow!\')\n});\n```\n\nOutput\n\n```\npow!\n```\n\nAnd now /tmp/foo/bar/baz exists, huzzah!\n\n# methods\n\n```js\nvar mkdirp = require(\'mkdirp\');\n```\n\n## mkdirp(dir, opts, cb)\n\nCreate a new directory and any necessary subdirectories at `dir` with octal\npermission string `opts.mode`. If `opts` is a non-object, it will be treated as\nthe `opts.mode`.\n\nIf `opts.mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\n`cb(err, made)` fires with the error or the first directory `made`\nthat had to be created, if any.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdir(path, mode, cb)` and\n`opts.fs.stat(path, cb)`.\n\n## mkdirp.sync(dir, opts)\n\nSynchronously create a new directory and any necessary subdirectories at `dir`\nwith octal permission string `opts.mode`. If `opts` is a non-object, it will be\ntreated as the `opts.mode`.\n\nIf `opts.mode` isn\'t specified, it defaults to `0777 & (~process.umask())`.\n\nReturns the first directory that had to be created, if any.\n\nYou can optionally pass in an alternate `fs` implementation by passing in\n`opts.fs`. Your implementation should have `opts.fs.mkdirSync(path, mode)` and\n`opts.fs.statSync(path)`.\n\n# usage\n\nThis package also ships with a `mkdirp` command.\n\n```\nusage: mkdirp [DIR1,DIR2..] {OPTIONS}\n\n  Create each supplied directory including any necessary parent directories that\n  don\'t yet exist.\n  \n  If the directory already exists, do nothing.\n\nOPTIONS are:\n\n  -m, --mode   If a directory needs to be created, set the mode as an octal\n               permission string.\n\n```\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```\nnpm install mkdirp\n```\n\nto get the library, or\n\n```\nnpm install -g mkdirp\n```\n\nto get the command.\n\n# license\n\nMIT\n',
        readmeFilename: 'readme.markdown',
        optionalDependencies: {},
        _dependencies: [Object],
        path: '/Users/tom.klancer/repo/auditjs/node_modules/mkdirp',
        error: null,
        extraneous: false },
     npm: 
      { _from: 'npm@^4.1.1',
        _id: 'npm@4.6.1',
        _inBundle: false,
        _integrity: 'sha1-+Osa0A3FilUUNjtBylNCgX8L1kY=',
        _location: '/npm',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/npm/-/npm-4.6.1.tgz',
        _shasum: 'f8eb1ad00dc58a5514363b41ca5342817f0bd646',
        _spec: 'npm@^4.1.1',
        _where: '/Users/tom.klancer/repo/auditjs',
        author: [Object],
        bin: [Object],
        bugs: [Object],
        bundleDependencies: [Array],
        config: [Object],
        contributors: [Array],
        dependencies: [Object],
        deprecated: false,
        description: 'a package manager for JavaScript',
        devDependencies: [Object],
        directories: [Object],
        homepage: 'https://docs.npmjs.com/',
        keywords: [Array],
        license: 'Artistic-2.0',
        main: './lib/npm.js',
        man: [Array],
        name: 'npm',
        preferGlobal: true,
        repository: [Object],
        scripts: [Object],
        version: '4.6.1',
        readme: 'npm(1) -- a JavaScript package manager\n==============================\n\n[![Build Status](https://img.shields.io/travis/npm/npm/latest.svg)](https://travis-ci.org/npm/npm)\n\n## SYNOPSIS\n\nThis is just enough info to get you up and running.\n\nMuch more info available via `npm help` once it\'s installed.\n\n## IMPORTANT\n\n**You need node v4 or higher to run this program.**\n\nTo install an old **and unsupported** version of npm that works on node v0.12\nand prior, clone the git repo and dig through the old tags and branches.\n\n**npm is configured to use npm, Inc.\'s public package registry at\n<https://registry.npmjs.org> by default.**\n\nYou can configure npm to use any compatible registry you\nlike, and even run your own registry. Check out the [doc on\nregistries](https://docs.npmjs.com/misc/registry).\n\nUse of someone else\'s registry may be governed by terms of use. The\nterms of use for the default public registry are available at\n<https://www.npmjs.com>.\n\n## Super Easy Install\n\nnpm is bundled with [node](https://nodejs.org/en/download/).\n\n### Windows Computers\n\n[Get the MSI](https://nodejs.org/en/download/).  npm is in it.\n\n### Apple Macintosh Computers\n\n[Get the pkg](https://nodejs.org/en/download/).  npm is in it.\n\n### Other Sorts of Unices\n\nRun `make install`.  npm will be installed with node.\n\nIf you want a more fancy pants install (a different version, customized\npaths, etc.) then read on.\n\n## Fancy Install (Unix)\n\nThere\'s a pretty robust install script at\n<https://www.npmjs.com/install.sh>.  You can download that and run it.\n\nHere\'s an example using curl:\n\n```sh\ncurl -L https://www.npmjs.com/install.sh | sh\n```\n\n### Slightly Fancier\n\nYou can set any npm configuration params with that script:\n\n```sh\nnpm_config_prefix=/some/path sh install.sh\n```\n\nOr, you can run it in uber-debuggery mode:\n\n```sh\nnpm_debug=1 sh install.sh\n```\n\n### Even Fancier\n\nGet the code with git.  Use `make` to build the docs and do other stuff.\nIf you plan on hacking on npm, `make link` is your friend.\n\nIf you\'ve got the npm source code, you can also semi-permanently set\narbitrary config keys using the `./configure --key=val ...`, and then\nrun npm commands by doing `node cli.js <command> <args>`.  (This is helpful\nfor testing, or running stuff without actually installing npm itself.)\n\n## Windows Install or Upgrade\n\nMany improvements for Windows users have been made in npm 3 - you will have a better\nexperience if you run a recent version of npm. To upgrade, either use [Microsoft\'s\nupgrade tool](https://github.com/felixrieseberg/npm-windows-upgrade),\n[download a new version of Node](https://nodejs.org/en/download/),\nor follow the Windows upgrade instructions in the\n[npm Troubleshooting Guide](./TROUBLESHOOTING.md).\n\nIf that\'s not fancy enough for you, then you can fetch the code with\ngit, and mess with it directly.\n\n## Installing on Cygwin\n\nNo.\n\n## Uninstalling\n\nSo sad to see you go.\n\n```sh\nsudo npm uninstall npm -g\n```\nOr, if that fails,\n\n```sh\nsudo make uninstall\n```\n\n## More Severe Uninstalling\n\nUsually, the above instructions are sufficient.  That will remove\nnpm, but leave behind anything you\'ve installed.\n\nIf you would like to remove all the packages that you have installed,\nthen you can use the `npm ls` command to find them, and then `npm rm` to\nremove them.\n\nTo remove cruft left behind by npm 0.x, you can use the included\n`clean-old.sh` script file.  You can run it conveniently like this:\n\n```sh\nnpm explore npm -g -- sh scripts/clean-old.sh\n```\n\nnpm uses two configuration files, one for per-user configs, and another\nfor global (every-user) configs.  You can view them by doing:\n\n```sh\nnpm config get userconfig   # defaults to ~/.npmrc\nnpm config get globalconfig # defaults to /usr/local/etc/npmrc\n```\n\nUninstalling npm does not remove configuration files by default.  You\nmust remove them yourself manually if you want them gone.  Note that\nthis means that future npm installs will not remember the settings that\nyou have chosen.\n\n## More Docs\n\nCheck out the [docs](https://docs.npmjs.com/),\n\nYou can use the `npm help` command to read any of them.\n\nIf you\'re a developer, and you want to use npm to publish your program,\nyou should [read this](https://docs.npmjs.com/misc/developers)\n\n## BUGS\n\nWhen you find issues, please report them:\n\n* web:\n  <https://github.com/npm/npm/issues>\n\nBe sure to include *all* of the output from the npm command that didn\'t work\nas expected.  The `npm-debug.log` file is also helpful to provide.\n\nYou can also look for isaacs in #node.js on irc://irc.freenode.net.  She\nwill no doubt tell you to put the output in a gist or email.\n\n## SEE ALSO\n\n* npm(1)\n* npm-help(1)\n* npm-index(7)\n',
        readmeFilename: 'README.md',
        optionalDependencies: {},
        _dependencies: [Object],
        path: '/Users/tom.klancer/repo/auditjs/node_modules/npm',
        error: null,
        extraneous: false },
     ossindexjs: 
      { _from: 'ossindexjs@^2.0.0',
        _id: 'ossindexjs@2.0.0',
        _inBundle: false,
        _integrity: 'sha1-E9qmnd6ziHwn1XnxoQ7ZDwT25uE=',
        _location: '/ossindexjs',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/ossindexjs/-/ossindexjs-2.0.0.tgz',
        _shasum: '13daa69ddeb3887c27d579f1a10ed90f04f6e6e1',
        _spec: 'ossindexjs@^2.0.0',
        _where: '/Users/tom.klancer/repo/auditjs',
        author: [Object],
        bugs: [Object],
        bundleDependencies: false,
        dependencies: [Object],
        deprecated: false,
        description: 'OSS Index API for node.js',
        homepage: 'https://github.com/OSSIndex/ossindexjs#readme',
        keywords: [Array],
        license: 'BSD-3-Clause',
        main: 'ossindex.js',
        name: 'ossindexjs',
        repository: [Object],
        scripts: [Object],
        version: '2.0.0',
        readme: 'OSSIndexJS\n==========\n\nThis package provides convenience methods for accessing the OSS Index v2 REST API.\nDetails for the REST API can be found here: https://ossindex.net/docs/restapi2\n\nCurrently only one of the API calls are implemented.\n\nInstallation\n------------\n```\nnpm install ossindexjs\n```\n\nUsage\n-----\n\nFor example usage at this time see the "auditjs" package (`node install auditjs`).',
        readmeFilename: 'README.md',
        devDependencies: {},
        optionalDependencies: {},
        _dependencies: [Object],
        path: '/Users/tom.klancer/repo/auditjs/node_modules/ossindexjs',
        error: null,
        extraneous: false },
     semver: 
      { _from: 'semver@^5.3.0',
        _id: 'semver@5.4.1',
        _inBundle: false,
        _integrity: 'sha512-WfG/X9+oATh81XtllIo/I8gOiY9EXRdv1cQdyykeXK17YcUW3EXUAi2To4pcH6nZtJPr7ZOpM5OMyWJZm+8Rsg==',
        _location: '/semver',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/semver/-/semver-5.4.1.tgz',
        _shasum: 'e059c09d8571f0540823733433505d3a2f00b18e',
        _spec: 'semver@^5.3.0',
        _where: '/Users/tom.klancer/repo/auditjs',
        bin: [Object],
        bugs: [Object],
        bundleDependencies: false,
        deprecated: false,
        description: 'The semantic version parser used by npm.',
        devDependencies: [Object],
        files: [Array],
        homepage: 'https://github.com/npm/node-semver#readme',
        license: 'ISC',
        main: 'semver.js',
        name: 'semver',
        repository: [Object],
        scripts: [Object],
        version: '5.4.1',
        readme: 'semver(1) -- The semantic versioner for npm\n===========================================\n\n## Install\n\n```bash\nnpm install --save semver\n````\n\n## Usage\n\nAs a node module:\n\n```js\nconst semver = require(\'semver\')\n\nsemver.valid(\'1.2.3\') // \'1.2.3\'\nsemver.valid(\'a.b.c\') // null\nsemver.clean(\'  =v1.2.3   \') // \'1.2.3\'\nsemver.satisfies(\'1.2.3\', \'1.x || >=2.5.0 || 5.0.0 - 7.2.3\') // true\nsemver.gt(\'1.2.3\', \'9.8.7\') // false\nsemver.lt(\'1.2.3\', \'9.8.7\') // true\n```\n\nAs a command-line utility:\n\n```\n$ semver -h\n\nSemVer 5.3.0\n\nA JavaScript implementation of the http://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] <version> [<version> [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range <range>\n        Print versions that match the specified range.\n\n-i --increment [<level>]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, or prerelease.  Default level is \'patch\'.\n        Only one version may be specified.\n\n--preid <identifier>\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them.\n```\n\n## Versions\n\nA "version" is described by the `v2.0.0` specification found at\n<http://semver.org/>.\n\nA leading `"="` or `"v"` character is stripped off and ignored.\n\n## Ranges\n\nA `version range` is a set of `comparators` which specify versions\nthat satisfy the range.\n\nA `comparator` is composed of an `operator` and a `version`.  The set\nof primitive `operators` is:\n\n* `<` Less than\n* `<=` Less than or equal to\n* `>` Greater than\n* `>=` Greater than or equal to\n* `=` Equal.  If no operator is specified, then equality is assumed,\n  so this operator is optional, but MAY be included.\n\nFor example, the comparator `>=1.2.7` would match the versions\n`1.2.7`, `1.2.8`, `2.5.3`, and `1.3.9`, but not the versions `1.2.6`\nor `1.1.0`.\n\nComparators can be joined by whitespace to form a `comparator set`,\nwhich is satisfied by the **intersection** of all of the comparators\nit includes.\n\nA range is composed of one or more comparator sets, joined by `||`.  A\nversion matches a range if and only if every comparator in at least\none of the `||`-separated comparator sets is satisfied by the version.\n\nFor example, the range `>=1.2.7 <1.3.0` would match the versions\n`1.2.7`, `1.2.8`, and `1.2.99`, but not the versions `1.2.6`, `1.3.0`,\nor `1.1.0`.\n\nThe range `1.2.7 || >=1.2.9 <2.0.0` would match the versions `1.2.7`,\n`1.2.9`, and `1.4.6`, but not the versions `1.2.8` or `2.0.0`.\n\n### Prerelease Tags\n\nIf a version has a prerelease tag (for example, `1.2.3-alpha.3`) then\nit will only be allowed to satisfy comparator sets if at least one\ncomparator with the same `[major, minor, patch]` tuple also has a\nprerelease tag.\n\nFor example, the range `>1.2.3-alpha.3` would be allowed to match the\nversion `1.2.3-alpha.7`, but it would *not* be satisfied by\n`3.4.5-alpha.9`, even though `3.4.5-alpha.9` is technically "greater\nthan" `1.2.3-alpha.3` according to the SemVer sort rules.  The version\nrange only accepts prerelease tags on the `1.2.3` version.  The\nversion `3.4.5` *would* satisfy the range, because it does not have a\nprerelease flag, and `3.4.5` is greater than `1.2.3-alpha.7`.\n\nThe purpose for this behavior is twofold.  First, prerelease versions\nfrequently are updated very quickly, and contain many breaking changes\nthat are (by the author\'s design) not yet fit for public consumption.\nTherefore, by default, they are excluded from range matching\nsemantics.\n\nSecond, a user who has opted into using a prerelease version has\nclearly indicated the intent to use *that specific* set of\nalpha/beta/rc versions.  By including a prerelease tag in the range,\nthe user is indicating that they are aware of the risk.  However, it\nis still not appropriate to assume that they have opted into taking a\nsimilar risk on the *next* set of prerelease versions.\n\n#### Prerelease Identifiers\n\nThe method `.inc` takes an additional `identifier` string argument that\nwill append the value of the string as a prerelease identifier:\n\n```javascript\nsemver.inc(\'1.2.3\', \'prerelease\', \'beta\')\n// \'1.2.4-beta.0\'\n```\n\ncommand-line example:\n\n```bash\n$ semver 1.2.3 -i prerelease --preid beta\n1.2.4-beta.0\n```\n\nWhich then can be used to increment further:\n\n```bash\n$ semver 1.2.4-beta.0 -i prerelease\n1.2.4-beta.1\n```\n\n### Advanced Range Syntax\n\nAdvanced range syntax desugars to primitive comparators in\ndeterministic ways.\n\nAdvanced ranges may be combined in the same way as primitive\ncomparators using white space or `||`.\n\n#### Hyphen Ranges `X.Y.Z - A.B.C`\n\nSpecifies an inclusive set.\n\n* `1.2.3 - 2.3.4` := `>=1.2.3 <=2.3.4`\n\nIf a partial version is provided as the first version in the inclusive\nrange, then the missing pieces are replaced with zeroes.\n\n* `1.2 - 2.3.4` := `>=1.2.0 <=2.3.4`\n\nIf a partial version is provided as the second version in the\ninclusive range, then all versions that start with the supplied parts\nof the tuple are accepted, but nothing that would be greater than the\nprovided tuple parts.\n\n* `1.2.3 - 2.3` := `>=1.2.3 <2.4.0`\n* `1.2.3 - 2` := `>=1.2.3 <3.0.0`\n\n#### X-Ranges `1.2.x` `1.X` `1.2.*` `*`\n\nAny of `X`, `x`, or `*` may be used to "stand in" for one of the\nnumeric values in the `[major, minor, patch]` tuple.\n\n* `*` := `>=0.0.0` (Any version satisfies)\n* `1.x` := `>=1.0.0 <2.0.0` (Matching major version)\n* `1.2.x` := `>=1.2.0 <1.3.0` (Matching major and minor versions)\n\nA partial version range is treated as an X-Range, so the special\ncharacter is in fact optional.\n\n* `""` (empty string) := `*` := `>=0.0.0`\n* `1` := `1.x.x` := `>=1.0.0 <2.0.0`\n* `1.2` := `1.2.x` := `>=1.2.0 <1.3.0`\n\n#### Tilde Ranges `~1.2.3` `~1.2` `~1`\n\nAllows patch-level changes if a minor version is specified on the\ncomparator.  Allows minor-level changes if not.\n\n* `~1.2.3` := `>=1.2.3 <1.(2+1).0` := `>=1.2.3 <1.3.0`\n* `~1.2` := `>=1.2.0 <1.(2+1).0` := `>=1.2.0 <1.3.0` (Same as `1.2.x`)\n* `~1` := `>=1.0.0 <(1+1).0.0` := `>=1.0.0 <2.0.0` (Same as `1.x`)\n* `~0.2.3` := `>=0.2.3 <0.(2+1).0` := `>=0.2.3 <0.3.0`\n* `~0.2` := `>=0.2.0 <0.(2+1).0` := `>=0.2.0 <0.3.0` (Same as `0.2.x`)\n* `~0` := `>=0.0.0 <(0+1).0.0` := `>=0.0.0 <1.0.0` (Same as `0.x`)\n* `~1.2.3-beta.2` := `>=1.2.3-beta.2 <1.3.0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n\n#### Caret Ranges `^1.2.3` `^0.2.5` `^0.0.4`\n\nAllows changes that do not modify the left-most non-zero digit in the\n`[major, minor, patch]` tuple.  In other words, this allows patch and\nminor updates for versions `1.0.0` and above, patch updates for\nversions `0.X >=0.1.0`, and *no* updates for versions `0.0.X`.\n\nMany authors treat a `0.x` version as if the `x` were the major\n"breaking-change" indicator.\n\nCaret ranges are ideal when an author may make breaking changes\nbetween `0.2.4` and `0.3.0` releases, which is a common practice.\nHowever, it presumes that there will *not* be breaking changes between\n`0.2.4` and `0.2.5`.  It allows for changes that are presumed to be\nadditive (but non-breaking), according to commonly observed practices.\n\n* `^1.2.3` := `>=1.2.3 <2.0.0`\n* `^0.2.3` := `>=0.2.3 <0.3.0`\n* `^0.0.3` := `>=0.0.3 <0.0.4`\n* `^1.2.3-beta.2` := `>=1.2.3-beta.2 <2.0.0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n* `^0.0.3-beta` := `>=0.0.3-beta <0.0.4`  Note that prereleases in the\n  `0.0.3` version *only* will be allowed, if they are greater than or\n  equal to `beta`.  So, `0.0.3-pr.2` would be allowed.\n\nWhen parsing caret ranges, a missing `patch` value desugars to the\nnumber `0`, but will allow flexibility within that value, even if the\nmajor and minor versions are both `0`.\n\n* `^1.2.x` := `>=1.2.0 <2.0.0`\n* `^0.0.x` := `>=0.0.0 <0.1.0`\n* `^0.0` := `>=0.0.0 <0.1.0`\n\nA missing `minor` and `patch` values will desugar to zero, but also\nallow flexibility within those values, even if the major version is\nzero.\n\n* `^1.x` := `>=1.0.0 <2.0.0`\n* `^0.x` := `>=0.0.0 <1.0.0`\n\n### Range Grammar\n\nPutting all this together, here is a Backus-Naur grammar for ranges,\nfor the benefit of parser authors:\n\n```bnf\nrange-set  ::= range ( logical-or range ) *\nlogical-or ::= ( \' \' ) * \'||\' ( \' \' ) *\nrange      ::= hyphen | simple ( \' \' simple ) * | \'\'\nhyphen     ::= partial \' - \' partial\nsimple     ::= primitive | partial | tilde | caret\nprimitive  ::= ( \'<\' | \'>\' | \'>=\' | \'<=\' | \'=\' | ) partial\npartial    ::= xr ( \'.\' xr ( \'.\' xr qualifier ? )? )?\nxr         ::= \'x\' | \'X\' | \'*\' | nr\nnr         ::= \'0\' | [\'1\'-\'9\'] ( [\'0\'-\'9\'] ) *\ntilde      ::= \'~\' partial\ncaret      ::= \'^\' partial\nqualifier  ::= ( \'-\' pre )? ( \'+\' build )?\npre        ::= parts\nbuild      ::= parts\nparts      ::= part ( \'.\' part ) *\npart       ::= nr | [-0-9A-Za-z]+\n```\n\n## Functions\n\nAll methods and classes take a final `loose` boolean argument that, if\ntrue, will be more forgiving about not-quite-valid semver strings.\nThe resulting output will always be 100% strict, of course.\n\nStrict-mode Comparators and Ranges will be strict about the SemVer\nstrings that they parse.\n\n* `valid(v)`: Return the parsed version, or null if it\'s not valid.\n* `inc(v, release)`: Return the version incremented by the release\n  type (`major`,   `premajor`, `minor`, `preminor`, `patch`,\n  `prepatch`, or `prerelease`), or null if it\'s not valid\n  * `premajor` in one call will bump the version up to the next major\n    version and down to a prerelease of that major version.\n    `preminor`, and `prepatch` work the same way.\n  * If called from a non-prerelease version, the `prerelease` will work the\n    same as `prepatch`. It increments the patch version, then makes a\n    prerelease. If the input version is already a prerelease it simply\n    increments it.\n* `prerelease(v)`: Returns an array of prerelease components, or null\n  if none exist. Example: `prerelease(\'1.2.3-alpha.1\') -> [\'alpha\', 1]`\n* `major(v)`: Return the major version number.\n* `minor(v)`: Return the minor version number.\n* `patch(v)`: Return the patch version number.\n* `intersects(r1, r2, loose)`: Return true if the two supplied ranges\n  or comparators intersect.\n\n### Comparison\n\n* `gt(v1, v2)`: `v1 > v2`\n* `gte(v1, v2)`: `v1 >= v2`\n* `lt(v1, v2)`: `v1 < v2`\n* `lte(v1, v2)`: `v1 <= v2`\n* `eq(v1, v2)`: `v1 == v2` This is true if they\'re logically equivalent,\n  even if they\'re not the exact same string.  You already know how to\n  compare strings.\n* `neq(v1, v2)`: `v1 != v2` The opposite of `eq`.\n* `cmp(v1, comparator, v2)`: Pass in a comparison string, and it\'ll call\n  the corresponding function above.  `"==="` and `"!=="` do simple\n  string comparison, but are included for completeness.  Throws if an\n  invalid comparison string is provided.\n* `compare(v1, v2)`: Return `0` if `v1 == v2`, or `1` if `v1` is greater, or `-1` if\n  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.\n* `rcompare(v1, v2)`: The reverse of compare.  Sorts an array of versions\n  in descending order when passed to `Array.sort()`.\n* `diff(v1, v2)`: Returns difference between two versions by the release type\n  (`major`, `premajor`, `minor`, `preminor`, `patch`, `prepatch`, or `prerelease`),\n  or null if the versions are the same.\n\n### Comparators\n\n* `intersects(comparator)`: Return true if the comparators intersect\n\n### Ranges\n\n* `validRange(range)`: Return the valid range or null if it\'s not valid\n* `satisfies(version, range)`: Return true if the version satisfies the\n  range.\n* `maxSatisfying(versions, range)`: Return the highest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `minSatisfying(versions, range)`: Return the lowest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `gtr(version, range)`: Return `true` if version is greater than all the\n  versions possible in the range.\n* `ltr(version, range)`: Return `true` if version is less than all the\n  versions possible in the range.\n* `outside(version, range, hilo)`: Return true if the version is outside\n  the bounds of the range in either the high or low direction.  The\n  `hilo` argument must be either the string `\'>\'` or `\'<\'`.  (This is\n  the function called by `gtr` and `ltr`.)\n* `intersects(range)`: Return true if any of the ranges comparators intersect\n\nNote that, since ranges may be non-contiguous, a version might not be\ngreater than a range, less than a range, *or* satisfy a range!  For\nexample, the range `1.2 <1.2.9 || >2.0.0` would have a hole from `1.2.9`\nuntil `2.0.0`, so the version `1.2.10` would not be greater than the\nrange (because `2.0.1` satisfies, which is higher), nor less than the\nrange (since `1.2.8` satisfies, which is lower), and it also does not\nsatisfy the range.\n\nIf you want to know if a version satisfies or does not satisfy a\nrange, use the `satisfies(version, range)` function.\n',
        readmeFilename: 'README.md',
        dependencies: {},
        optionalDependencies: {},
        _dependencies: {},
        path: '/Users/tom.klancer/repo/auditjs/node_modules/semver',
        error: null,
        extraneous: false },
     xmldom: 
      { _from: 'xmldom@^0.1.27',
        _id: 'xmldom@0.1.27',
        _inBundle: false,
        _integrity: 'sha1-1QH5ezvbQDr4757MIFcxh6rawOk=',
        _location: '/xmldom',
        _phantomChildren: {},
        _requested: [Object],
        _requiredBy: [Array],
        _resolved: 'https://registry.npmjs.org/xmldom/-/xmldom-0.1.27.tgz',
        _shasum: 'd501f97b3bdb403af8ef9ecc20573187aadac0e9',
        _spec: 'xmldom@^0.1.27',
        _where: '/Users/tom.klancer/repo/auditjs',
        author: [Object],
        bugs: [Object],
        bundleDependencies: false,
        contributors: [Array],
        dependencies: {},
        deprecated: false,
        description: 'A W3C Standard XML DOM(Level2 CORE) implementation and parser(DOMParser/XMLSerializer).',
        devDependencies: [Object],
        engines: [Object],
        homepage: 'https://github.com/jindw/xmldom',
        keywords: [Array],
        licenses: [Array],
        main: './dom-parser.js',
        maintainers: [Array],
        name: 'xmldom',
        repository: [Object],
        scripts: [Object],
        version: '0.1.27',
        readme: '# XMLDOM [![Build Status](https://secure.travis-ci.org/bigeasy/xmldom.png?branch=master)](http://travis-ci.org/bigeasy/xmldom) [![Coverage Status](https://coveralls.io/repos/bigeasy/xmldom/badge.png?branch=master)](https://coveralls.io/r/bigeasy/xmldom) [![NPM version](https://badge.fury.io/js/xmldom.png)](http://badge.fury.io/js/xmldom)\n\nA JavaScript implementation of W3C DOM for Node.js, Rhino and the browser. Fully\ncompatible with `W3C DOM level2`; and some compatible with `level3`. Supports\n`DOMParser` and `XMLSerializer` interface such as in browser.\n\nInstall:\n-------\n>npm install xmldom\n\nExample:\n====\n```javascript\nvar DOMParser = require(\'xmldom\').DOMParser;\nvar doc = new DOMParser().parseFromString(\n    \'<xml xmlns="a" xmlns:c="./lite">\\n\'+\n        \'\\t<child>test</child>\\n\'+\n        \'\\t<child></child>\\n\'+\n        \'\\t<child/>\\n\'+\n    \'</xml>\'\n    ,\'text/xml\');\ndoc.documentElement.setAttribute(\'x\',\'y\');\ndoc.documentElement.setAttributeNS(\'./lite\',\'c:x\',\'y2\');\nvar nsAttr = doc.documentElement.getAttributeNS(\'./lite\',\'x\')\nconsole.info(nsAttr)\nconsole.info(doc)\n```\nAPI Reference\n=====\n\n * [DOMParser](https://developer.mozilla.org/en/DOMParser):\n\n\t```javascript\n\tparseFromString(xmlsource,mimeType)\n\t```\n\t* **options extension** _by xmldom_(not BOM standard!!)\n\n\t```javascript\n\t//added the options argument\n\tnew DOMParser(options)\n\t\n\t//errorHandler is supported\n\tnew DOMParser({\n\t\t/**\n\t\t * locator is always need for error position info\n\t\t */\n\t\tlocator:{},\n\t\t/**\n\t\t * you can override the errorHandler for xml parser\n\t\t * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n\t\t */\n\t\terrorHandler:{warning:function(w){console.warn(w)},error:callback,fatalError:callback}\n\t\t//only callback model\n\t\t//errorHandler:function(level,msg){console.log(level,msg)}\n\t})\n\t\t\n\t```\n\n * [XMLSerializer](https://developer.mozilla.org/en/XMLSerializer)\n \n\t```javascript\n\tserializeToString(node)\n\t```\nDOM level2 method and attribute:\n------\n\n * [Node](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247)\n\t\n\t\tattribute:\n\t\t\tnodeValue|prefix\n\t\treadonly attribute:\n\t\t\tnodeName|nodeType|parentNode|childNodes|firstChild|lastChild|previousSibling|nextSibling|attributes|ownerDocument|namespaceURI|localName\n\t\tmethod:\t\n\t\t\tinsertBefore(newChild, refChild)\n\t\t\treplaceChild(newChild, oldChild)\n\t\t\tremoveChild(oldChild)\n\t\t\tappendChild(newChild)\n\t\t\thasChildNodes()\n\t\t\tcloneNode(deep)\n\t\t\tnormalize()\n\t\t\tisSupported(feature, version)\n\t\t\thasAttributes()\n\n * [DOMImplementation](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-102161490)\n\t\t\n\t\tmethod:\n\t\t\thasFeature(feature, version)\n\t\t\tcreateDocumentType(qualifiedName, publicId, systemId)\n\t\t\tcreateDocument(namespaceURI, qualifiedName, doctype)\n\n * [Document](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#i-Document) : Node\n\t\t\n\t\treadonly attribute:\n\t\t\tdoctype|implementation|documentElement\n\t\tmethod:\n\t\t\tcreateElement(tagName)\n\t\t\tcreateDocumentFragment()\n\t\t\tcreateTextNode(data)\n\t\t\tcreateComment(data)\n\t\t\tcreateCDATASection(data)\n\t\t\tcreateProcessingInstruction(target, data)\n\t\t\tcreateAttribute(name)\n\t\t\tcreateEntityReference(name)\n\t\t\tgetElementsByTagName(tagname)\n\t\t\timportNode(importedNode, deep)\n\t\t\tcreateElementNS(namespaceURI, qualifiedName)\n\t\t\tcreateAttributeNS(namespaceURI, qualifiedName)\n\t\t\tgetElementsByTagNameNS(namespaceURI, localName)\n\t\t\tgetElementById(elementId)\n\n * [DocumentFragment](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-B63ED1A3) : Node\n * [Element](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-745549614) : Node\n\t\t\n\t\treadonly attribute:\n\t\t\ttagName\n\t\tmethod:\n\t\t\tgetAttribute(name)\n\t\t\tsetAttribute(name, value)\n\t\t\tremoveAttribute(name)\n\t\t\tgetAttributeNode(name)\n\t\t\tsetAttributeNode(newAttr)\n\t\t\tremoveAttributeNode(oldAttr)\n\t\t\tgetElementsByTagName(name)\n\t\t\tgetAttributeNS(namespaceURI, localName)\n\t\t\tsetAttributeNS(namespaceURI, qualifiedName, value)\n\t\t\tremoveAttributeNS(namespaceURI, localName)\n\t\t\tgetAttributeNodeNS(namespaceURI, localName)\n\t\t\tsetAttributeNodeNS(newAttr)\n\t\t\tgetElementsByTagNameNS(namespaceURI, localName)\n\t\t\thasAttribute(name)\n\t\t\thasAttributeNS(namespaceURI, localName)\n\n * [Attr](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-637646024) : Node\n\t\n\t\tattribute:\n\t\t\tvalue\n\t\treadonly attribute:\n\t\t\tname|specified|ownerElement\n\n * [NodeList](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177)\n\t\t\n\t\treadonly attribute:\n\t\t\tlength\n\t\tmethod:\n\t\t\titem(index)\n\t\n * [NamedNodeMap](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1780488922)\n\n\t\treadonly attribute:\n\t\t\tlength\n\t\tmethod:\n\t\t\tgetNamedItem(name)\n\t\t\tsetNamedItem(arg)\n\t\t\tremoveNamedItem(name)\n\t\t\titem(index)\n\t\t\tgetNamedItemNS(namespaceURI, localName)\n\t\t\tsetNamedItemNS(arg)\n\t\t\tremoveNamedItemNS(namespaceURI, localName)\n\t\t\n * [CharacterData](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-FF21A306) : Node\n\t\n\t\tmethod:\n\t\t\tsubstringData(offset, count)\n\t\t\tappendData(arg)\n\t\t\tinsertData(offset, arg)\n\t\t\tdeleteData(offset, count)\n\t\t\treplaceData(offset, count, arg)\n\t\t\n * [Text](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1312295772) : CharacterData\n\t\n\t\tmethod:\n\t\t\tsplitText(offset)\n\t\t\t\n * [CDATASection](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-667469212)\n * [Comment](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1728279322) : CharacterData\n\t\n * [DocumentType](http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-412266927)\n\t\n\t\treadonly attribute:\n\t\t\tname|entities|notations|publicId|systemId|internalSubset\n\t\t\t\n * Notation : Node\n\t\n\t\treadonly attribute:\n\t\t\tpublicId|systemId\n\t\t\t\n * Entity : Node\n\t\n\t\treadonly attribute:\n\t\t\tpublicId|systemId|notationName\n\t\t\t\n * EntityReference : Node \n * ProcessingInstruction : Node \n\t\n\t\tattribute:\n\t\t\tdata\n\t\treadonly attribute:\n\t\t\ttarget\n\t\t\nDOM level 3 support:\n-----\n\n * [Node](http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent)\n\t\t\n\t\tattribute:\n\t\t\ttextContent\n\t\tmethod:\n\t\t\tisDefaultNamespace(namespaceURI){\n\t\t\tlookupNamespaceURI(prefix)\n\nDOM extension by xmldom\n---\n * [Node] Source position extension; \n\t\t\n\t\tattribute:\n\t\t\t//Numbered starting from \'1\'\n\t\t\tlineNumber\n\t\t\t//Numbered starting from \'1\'\n\t\t\tcolumnNumber\n',
        readmeFilename: 'readme.md',
        optionalDependencies: {},
        _dependencies: {},
        path: '/Users/tom.klancer/repo/auditjs/node_modules/xmldom',
        error: null,
        extraneous: false } },
  readme: 'AuditJS\n=======\n\nAudits an NPM project using the [OSS Index v2 REST API](https://ossindex.net/docs/restapi2)\nto identify known vulnerabilities and outdated package versions.\n\n![Screenshot](screenshots/screenshot.png)\n\nInstallation\n------------\n\n```\nnpm install auditjs -g\n```\n\nUsage\n-----\n\n```terminal\n  Usage [Linux]:   auditjs [options]\n  Usage [Windows]: auditjs-win\n\n  Options:\n\n    -b --bower                   This flag is necessary to correctly audit bower packages.\n                                 Use together with -p bower.json, since scanning\n                                 bower_components is not supported.\n    -h, --help                   Output usage information\n\n    -n --noNode                  Ignore node executable when scanning node_modules\n    -p --package <file>          Specific package.json or bower.json file to audit\n    -q --quiet                   Supress console logging\n    -r --report                  Create JUnit reports in reports/ directory\n    -v --verbose                 Print all vulnerabilities\n    -V --version                 Output the version number\n    -w --whitelist <file>        Whitelist.json of vulnerabilities that should not break the build,\n                                 e.g. XSS vulnerabilities for an app with no possbile input for XSS.\n                                 See Example test_data/audit_package_whitelist.json.\n\n```\n\nAudit installed packages and their dependencies to identify known\nvulnerabilities.\n\n**IMPORTANT WINDOWS USAGE NOTE ... IMPORTANT WINDOWS USAGE NOTE ... IMPORTANT WINDOWS USAGE NOTE**\n\n> **On windows execute using `auditjs-win`.** This is required for now due to some\n> Linux-specific code which mitigates some odd Debian/Ubuntu specific edge cases.\n\n**IMPORTANT WINDOWS USAGE NOTE ... IMPORTANT WINDOWS USAGE NOTE ... IMPORTANT WINDOWS USAGE NOTE**\n\nExecute from inside a node project (above the node_modules directory) to audit\nthe dependencies. This will audit not only the direct dependencies of the project,\nbut all **transitive** dependencies. To identify transitive dependencies they must\nall be installed for the project under audit.\n\nIf a package.json file is specified as an argument, only the dependencies in\nthe package file will be audited (no transitive dependencies).\n\nIf a vulnerability is found to be affecting an installed library the package\nheader will be highlighted in red and information about the pertinent\nvulnerability will be printed to the screen.\n\n![Screenshot](screenshots/cve.png)\n\nRunning in verbose mode prints more descriptive output, and some extra information\nsuch as ALL vulnerabilities for a package, whether they are identified as\nimpacting the installed version or not.\n\nWhitelisting\n------------\nIt may be that a particular vulnerability does not impact your code, and upgrading the\ndependency is not feasible, wise, or indeed possible in your case. In that situation it\nis possible to whitelist a vulnerability to hide it from the output and report.\n\nSuccessful whitelisting will remove vulnerability mentions in the standard output and\nreport text, but will be mentioned elsewhere in the standard output like so:\n\n```\nFiltering the following vulnerabilities\n==================================================\nRoot path disclosure vulnerability affected versions: expressjs <3.19.1 || >=4.0.0 <4.11.1\nFixed root path disclosure vulnerability in express.static, res.sendfile, and res.sendFile\n==================================================\n```\n\nThe whitelist is a JSON document which is passed on the command line using the `-w <file>`\noption. The whitelist document itself can take one of two forms: simplified and verbose.\n\n### Simplified Whitelist Format\n\nThe simplified whitelist is a list of vulnerability IDs. The ID for a vulnerability can\nbe seen by generating the report (`-r`) and viewing the embedded JSON describing a\nparticular vulnerability. For example:\n\n```\n...\n  {\n    "id": 8398878757,\n    "title": "Cross Site Scripting (XSS) in JSONP",\n    "description": "JSONP allows untrusted resource URLs, which provides a vector for attack by malicious actors.",\n    "versions": [\n      "&lt;1.6.0-rc.0"\n    ],\n    "references": [\n      "https://github.com/angular/angular.js/commit/6476af83cd0418c84e034a955b12a842794385c4",\n      "https://github.com/angular/angular.js/issues/11352"\n    ],\n    "published": 0,\n    "updated": 1493261505026\n  },\n...\n```\n\nThe vulnerability id is right at the top. A whitelist will look like this:\n\n```\n[\n8398878757,\n8402907552\n]\n```\n\n### Verbose Whitelist Format\n\nThe verbose whitelist is useful because it acts as documentation on the details of the\nvulnerabilities that have been filtered, with the associated title, description, version\nrange, and package.\n\nHere is the simplest example:\n\n```\n{\n  "packageName": [\n  {\n    "id": 8398878757\n  },\n  {\n    "id": 8402907552\n  }\n  ]\n}\n...\n```\n\nThe document is a JSON object, where the field names are the names of packages which contain\nthe vulnerabilities, and the value is a list of the vulnerabilities affecting the package that\nshould be filtered. The minimal data required is the ID for the vulnerability.\n\nAnd now something a bit more useful.\n\n```\n{\n  "expressjs": [\n    {\n      "id": 8301582599,\n      "title": "Root path disclosure vulnerability",\n      "description": "Fixed root path disclosure vulnerability in express.static, res.sendfile, and res.sendFile",\n      "versions": [\n        "&lt;3.19.1 || >=4.0.0 &lt;4.11.1"\n      ]\n    },\n    ...\n  ]\n}\n...\n```\n\nHere we reproduced the title, description, and version range of the vulnerability that is being\nfiltered. The data was copied straight from the JSON in the generated report. You can include any\nof the fields that you feel are most useful in documenting the vulnerability.\n\nLimitations\n-----------\n\nAs this program depends on the OSS Index database, network access is\nrequired. Connection problems with OSS Index will result in an exception.\n\nThe current version of AuditJS only reports on top level dependencies.\nIf feedback indicates people are interested we will extend auditing to run\nagainst the full dependency tree\n\nThe NVD does not always indicate all (or any) of the affected versions\nit is best to read the vulnerability text itself to determine whether\nany particular version is known to be vulnerable.\n\nCredit\n------\n\nMany thanks to [Fredrik J](https://github.com/qacwnfq) for his great improvements, including:\n* Bower support\n* JUnit reports\n* Whitelisting\n\nData in OSS Index has been retrieved and cross referenced from several\nsources, including but not limited to:\n\n* npm: https://www.npmjs.com/\n* The National Vulnerability Database (NVD): https://nvd.nist.gov/\n* Node Security Project: https://nodesecurity.io/\n',
  readmeFilename: 'README.md',
  gitHead: '66bed2d289d7a5fbdc6fb458e137410faaa2baaf',
  bugs: { url: 'https://github.com/OSSIndex/auditjs/issues' },
  homepage: 'https://github.com/OSSIndex/auditjs#readme',
  _id: 'auditjs@2.2.2',
  devDependencies: {},
  optionalDependencies: {},
  _dependencies: 
   { colors: '^1.1.2',
     commander: '^2.9.0',
     'html-entities': '^1.2.0',
     jsontoxml: '0.0.11',
     mkdirp: '^0.5.1',
     npm: '^4.1.1',
     ossindexjs: '^2.0.0',
     semver: '^5.3.0',
     xmldom: '^0.1.27' },
  path: '/Users/tom.klancer/repo/auditjs',
  error: null,
  extraneous: false }
LITE?  { name: 'auditjs',
  version: '2.2.2',
  dependencies: 
   { colors: 
      { version: '1.1.2',
        from: 'colors@^1.1.2',
        resolved: 'https://registry.npmjs.org/colors/-/colors-1.1.2.tgz' },
     commander: 
      { version: '2.11.0',
        from: 'commander@^2.9.0',
        resolved: 'https://registry.npmjs.org/commander/-/commander-2.11.0.tgz' },
     'html-entities': 
      { version: '1.2.1',
        from: 'html-entities@^1.2.0',
        resolved: 'https://registry.npmjs.org/html-entities/-/html-entities-1.2.1.tgz' },
     jsontoxml: 
      { version: '0.0.11',
        from: 'jsontoxml@0.0.11',
        resolved: 'https://registry.npmjs.org/jsontoxml/-/jsontoxml-0.0.11.tgz' },
     mkdirp: 
      { version: '0.5.1',
        from: 'mkdirp@^0.5.1',
        resolved: 'https://registry.npmjs.org/mkdirp/-/mkdirp-0.5.1.tgz',
        dependencies: [Object] },
     npm: 
      { version: '4.6.1',
        from: 'npm@^4.1.1',
        resolved: 'https://registry.npmjs.org/npm/-/npm-4.6.1.tgz',
        dependencies: [Object] },
     ossindexjs: 
      { version: '2.0.0',
        from: 'ossindexjs@^2.0.0',
        resolved: 'https://registry.npmjs.org/ossindexjs/-/ossindexjs-2.0.0.tgz',
        dependencies: [Object] },
     semver: 
      { version: '5.4.1',
        from: 'semver@^5.3.0',
        resolved: 'https://registry.npmjs.org/semver/-/semver-5.4.1.tgz' },
     xmldom: 
      { version: '0.1.27',
        from: 'xmldom@^0.1.27',
        resolved: 'https://registry.npmjs.org/xmldom/-/xmldom-0.1.27.tgz' } } } EEEE



[1/281] nodejs v8.3.0   30 known vulnerabilities, 0 affecting installed version
[2/281] colors 1.1.2   No known vulnerabilities...
[3/281] commander 2.11.0   No known vulnerabilities...
[4/281] html-entities 1.2.1   No known vulnerabilities...
[5/281] jsontoxml 0.0.11   No known vulnerabilities...
[6/281] mkdirp 0.5.1   No known vulnerabilities...
[7/281] minimist 0.0.8   No known vulnerabilities...
[8/281] npm 4.6.1   4 known vulnerabilities, 0 affecting installed version
[9/281] JSONStream 1.3.1   No known vulnerabilities...
[10/281] jsonparse 1.3.0   No known vulnerabilities...
[11/281] through 2.3.8   No known vulnerabilities...
[12/281] abbrev 1.1.0   No known vulnerabilities...
[13/281] ansi-regex 2.1.1   No known vulnerabilities...
[14/281] ansicolors 0.3.2   No known vulnerabilities...
[15/281] ansistyles 0.1.3   No known vulnerabilities...
[16/281] aproba 1.1.1   No known vulnerabilities...
[17/281] archy 1.0.0   No known vulnerabilities...
[18/281] asap 2.0.5   No known vulnerabilities...
[19/281] bluebird 3.5.0   No known vulnerabilities...
[20/281] call-limit 1.1.0   No known vulnerabilities...
[21/281] chownr 1.0.1   No known vulnerabilities...
[22/281] cmd-shim 2.0.2   No known vulnerabilities...
[23/281] graceful-fs 4.1.11   No known vulnerabilities...
[24/281] columnify 1.5.4   No known vulnerabilities...
[25/281] wcwidth 1.0.0   No known vulnerabilities...
[26/281] defaults 1.0.3   No known vulnerabilities...
[27/281] clone 1.0.2   No known vulnerabilities...
[28/281] strip-ansi 3.0.1   No known vulnerabilities...
[29/281] config-chain 1.1.11   No known vulnerabilities...
[30/281] proto-list 1.2.4   No known vulnerabilities...
[31/281] ini 1.3.4   No known vulnerabilities...
[32/281] debuglog 1.0.1   No known vulnerabilities...
[33/281] dezalgo 1.0.3   No known vulnerabilities...
[34/281] wrappy 1.0.2   No known vulnerabilities...
[35/281] editor 1.0.0   No known vulnerabilities...
[36/281] fs-vacuum 1.2.10   No known vulnerabilities...
[37/281] path-is-inside 1.0.2   No known vulnerabilities...
[38/281] rimraf 2.6.1   No known vulnerabilities...
[39/281] fs-write-stream-atomic 1.0.10   No known vulnerabilities...
[40/281] iferr 0.1.5   No known vulnerabilities...
[41/281] imurmurhash 0.1.4   No known vulnerabilities...
[42/281] readable-stream 2.2.9   No known vulnerabilities...
[43/281] fstream 1.0.11   No known vulnerabilities...
[44/281] inherits 2.0.3   No known vulnerabilities...
[45/281] fstream-npm 1.2.0   No known vulnerabilities...
[46/281] fstream-ignore 1.0.5   No known vulnerabilities...
[47/281] minimatch 3.0.3   1 known vulnerabilities, 0 affecting installed version
------------------------------------------------------------
[48/281] brace-expansion 1.1.6  [VULNERABLE]   
1 known vulnerabilities, 1 affecting installed version

Regular Expression Denial of Service (ReDoS)
> brace expansion versions before 1.1.7 are vulnerable to Regular Expression Denial of Service attacks.
> 
> -- [nodesecurity.io](https://nodesecurity.io/advisories/338)

Affected versions: <=1.1.6
References:
  * https://github.com/juliangruber/brace-expansion/issues/33
  * https://github.com/juliangruber/brace-expansion/pull/35
  * https://github.com/juliangruber/brace-expansion/pull/35/commits/b13381281cead487cbdbfd6a69fb097ea5e456c3
  * https://nodesecurity.io/advisories/338
------------------------------------------------------------

[49/281] balanced-match 0.4.2   No known vulnerabilities...
[50/281] concat-map 0.0.1   No known vulnerabilities...
[51/281] glob 7.1.1   No known vulnerabilities...
[52/281] fs.realpath 1.0.0   No known vulnerabilities...
[53/281] path-is-absolute 1.0.1   No known vulnerabilities...
[54/281] inflight 1.0.6   No known vulnerabilities...
[55/281] once 1.4.0   No known vulnerabilities...
[56/281] has-unicode 2.0.1   No known vulnerabilities...
[57/281] hosted-git-info 2.4.2   No known vulnerabilities...
[58/281] init-package-json 1.10.1   No known vulnerabilities...
[59/281] promzard 0.3.0   No known vulnerabilities...
[60/281] read 1.0.7   No known vulnerabilities...
[61/281] npm-package-arg 4.2.1   No known vulnerabilities...
[62/281] read-package-json 2.0.5   No known vulnerabilities...
[63/281] semver 5.3.0   2 known vulnerabilities, 0 affecting installed version
[64/281] validate-npm-package-license 3.0.1   No known vulnerabilities...
[65/281] validate-npm-package-name 3.0.0   No known vulnerabilities...
[66/281] lazy-property 1.0.0   No known vulnerabilities...
[67/281] lockfile 1.0.3   No known vulnerabilities...
[68/281] lodash._baseindexof 3.1.0   No known vulnerabilities...
[69/281] lodash._baseuniq 4.6.0   No known vulnerabilities...
[70/281] lodash._createset 4.0.3   No known vulnerabilities...
[71/281] lodash._root 3.0.1   No known vulnerabilities...
[72/281] lodash._bindcallback 3.0.1   No known vulnerabilities...
[73/281] lodash._cacheindexof 3.0.2   No known vulnerabilities...
[74/281] lodash._createcache 3.1.2   No known vulnerabilities...
[75/281] lodash._getnative 3.9.1   No known vulnerabilities...
[76/281] lodash.clonedeep 4.5.0   No known vulnerabilities...
[77/281] lodash.restparam 3.6.1   No known vulnerabilities...
[78/281] lodash.union 4.6.0   No known vulnerabilities...
[79/281] lodash.uniq 4.5.0   No known vulnerabilities...
[80/281] lodash.without 4.4.0   No known vulnerabilities...
[81/281] mississippi 1.3.0   No known vulnerabilities...
[82/281] concat-stream 1.6.0   2 known vulnerabilities, 0 affecting installed version
[83/281] typedarray 0.0.6   No known vulnerabilities...
[84/281] duplexify 3.5.0   No known vulnerabilities...
[85/281] end-of-stream 1.0.0   No known vulnerabilities...
[86/281] once 1.3.3   No known vulnerabilities...
[87/281] stream-shift 1.0.0   No known vulnerabilities...
[88/281] end-of-stream 1.1.0   No known vulnerabilities...
[89/281] flush-write-stream 1.0.2   No known vulnerabilities...
[90/281] from2 2.3.0   No known vulnerabilities...
[91/281] parallel-transform 1.1.0   No known vulnerabilities...
[92/281] cyclist 0.2.2   No known vulnerabilities...
[93/281] pump 1.0.2   No known vulnerabilities...
[94/281] pumpify 1.3.5   No known vulnerabilities...
[95/281] stream-each 1.2.0   No known vulnerabilities...
[96/281] through2 2.0.3   No known vulnerabilities...
[97/281] xtend 4.0.1   No known vulnerabilities...
[98/281] move-concurrently 1.0.1   No known vulnerabilities...
[99/281] copy-concurrently 1.0.3   No known vulnerabilities...
[100/281] run-queue 1.0.3   No known vulnerabilities...
[101/281] node-gyp 3.6.0   No known vulnerabilities...
[102/281] nopt 3.0.6   No known vulnerabilities...
[103/281] npmlog 4.0.2   No known vulnerabilities...
[104/281] osenv 0.1.4   No known vulnerabilities...
[105/281] request 2.81.0   1 known vulnerabilities, 0 affecting installed version
[106/281] tar 2.2.1   1 known vulnerabilities, 0 affecting installed version
[107/281] which 1.2.14   No known vulnerabilities...
[108/281] nopt 4.0.1   No known vulnerabilities...
[109/281] os-homedir 1.0.2   No known vulnerabilities...
[110/281] os-tmpdir 1.0.2   No known vulnerabilities...
[111/281] normalize-git-url 3.0.2   No known vulnerabilities...
[112/281] normalize-package-data 2.3.8   No known vulnerabilities...
[113/281] is-builtin-module 1.0.0   No known vulnerabilities...
[114/281] builtin-modules 1.1.1   No known vulnerabilities...
[115/281] npm-cache-filename 1.0.2   No known vulnerabilities...
[116/281] npm-install-checks 3.0.0   No known vulnerabilities...
[117/281] npm-registry-client 8.1.1   No known vulnerabilities...
[118/281] retry 0.10.1   No known vulnerabilities...
[119/281] slide 1.1.6   No known vulnerabilities...
[120/281] npm-user-validate 0.1.5   No known vulnerabilities...
[121/281] are-we-there-yet 1.1.4   No known vulnerabilities...
[122/281] delegates 1.0.0   No known vulnerabilities...
[123/281] console-control-strings 1.1.0   No known vulnerabilities...
[124/281] gauge 2.7.4   No known vulnerabilities...
[125/281] object-assign 4.1.1   No known vulnerabilities...
[126/281] signal-exit 3.0.2   No known vulnerabilities...
[127/281] string-width 1.0.2   No known vulnerabilities...
[128/281] code-point-at 1.1.0   No known vulnerabilities...
[129/281] is-fullwidth-code-point 1.0.0   No known vulnerabilities...
[130/281] number-is-nan 1.0.1   No known vulnerabilities...
[131/281] wide-align 1.1.0   No known vulnerabilities...
[132/281] set-blocking 2.0.0   No known vulnerabilities...
[133/281] opener 1.4.3   No known vulnerabilities...
[134/281] mute-stream 0.0.5   No known vulnerabilities...
[135/281] read-cmd-shim 1.0.1   No known vulnerabilities...
[136/281] read-installed 4.0.3   No known vulnerabilities...
[137/281] util-extend 1.0.3   No known vulnerabilities...
[138/281] readdir-scoped-modules 1.0.2   No known vulnerabilities...
[139/281] json-parse-helpfulerror 1.0.3   No known vulnerabilities...
[140/281] jju 1.3.0   No known vulnerabilities...
[141/281] read-package-tree 5.1.5   No known vulnerabilities...
[142/281] buffer-shims 1.0.0   No known vulnerabilities...
[143/281] core-util-is 1.0.2   No known vulnerabilities...
[144/281] isarray 1.0.0   No known vulnerabilities...
[145/281] process-nextick-args 1.0.7   No known vulnerabilities...
[146/281] string_decoder 1.0.0   No known vulnerabilities...
[147/281] util-deprecate 1.0.2   No known vulnerabilities...
[148/281] realize-package-specifier 3.0.3   No known vulnerabilities...
[149/281] aws-sign2 0.6.0   No known vulnerabilities...
[150/281] aws4 1.6.0   No known vulnerabilities...
[151/281] caseless 0.12.0   No known vulnerabilities...
[152/281] combined-stream 1.0.5   No known vulnerabilities...
[153/281] delayed-stream 1.0.0   No known vulnerabilities...
[154/281] extend 3.0.0   No known vulnerabilities...
[155/281] forever-agent 0.6.1   No known vulnerabilities...
[156/281] form-data 2.1.2   No known vulnerabilities...
[157/281] asynckit 0.4.0   No known vulnerabilities...
[158/281] mime-types 2.1.14   No known vulnerabilities...
[159/281] har-validator 4.2.1   No known vulnerabilities...
[160/281] ajv 4.11.4   No known vulnerabilities...
[161/281] co 4.6.0   No known vulnerabilities...
[162/281] json-stable-stringify 1.0.1   No known vulnerabilities...
[163/281] jsonify 0.0.0   No known vulnerabilities...
[164/281] har-schema 1.0.5   No known vulnerabilities...
[165/281] hawk 3.1.3   1 known vulnerabilities, 0 affecting installed version
[166/281] boom 2.10.1   No known vulnerabilities...
[167/281] hoek 2.16.3   1 known vulnerabilities, 0 affecting installed version
[168/281] cryptiles 2.0.5   No known vulnerabilities...
[169/281] sntp 1.0.9   No known vulnerabilities...
[170/281] http-signature 1.1.1   1 known vulnerabilities, 0 affecting installed version
[171/281] assert-plus 0.2.0   No known vulnerabilities...
[172/281] jsprim 1.3.1   No known vulnerabilities...
[173/281] extsprintf 1.0.2   No known vulnerabilities...
[174/281] json-schema 0.2.3   No known vulnerabilities...
[175/281] verror 1.3.6   No known vulnerabilities...
[176/281] sshpk 1.11.0   No known vulnerabilities...
[177/281] asn1 0.2.3   No known vulnerabilities...
[178/281] assert-plus 1.0.0   No known vulnerabilities...
[179/281] bcrypt-pbkdf 1.0.1   No known vulnerabilities...
[180/281] tweetnacl 0.14.5   1 known vulnerabilities, 0 affecting installed version
[181/281] dashdash 1.14.1   No known vulnerabilities...
[182/281] ecc-jsbn 0.1.1   No known vulnerabilities...
[183/281] jsbn 0.1.1   No known vulnerabilities...
[184/281] getpass 0.1.6   No known vulnerabilities...
[185/281] jodid25519 1.0.2   No known vulnerabilities...
[186/281] is-typedarray 1.0.0   No known vulnerabilities...
[187/281] isstream 0.1.2   No known vulnerabilities...
[188/281] json-stringify-safe 5.0.1   No known vulnerabilities...
[189/281] mime-db 1.26.0   No known vulnerabilities...
[190/281] oauth-sign 0.8.2   No known vulnerabilities...
[191/281] performance-now 0.2.0   No known vulnerabilities...
[192/281] qs 6.4.0   3 known vulnerabilities, 0 affecting installed version
[193/281] safe-buffer 5.0.1   No known vulnerabilities...
[194/281] stringstream 0.0.5   No known vulnerabilities...
[195/281] tough-cookie 2.3.2   1 known vulnerabilities, 0 affecting installed version
[196/281] punycode 1.4.1   No known vulnerabilities...
[197/281] tunnel-agent 0.6.0   No known vulnerabilities...
[198/281] uuid 3.0.1   1 known vulnerabilities, 0 affecting installed version
[199/281] sha 2.0.1   No known vulnerabilities...
[200/281] sorted-object 2.0.1   No known vulnerabilities...
[201/281] sorted-union-stream 2.1.3   No known vulnerabilities...
[202/281] from2 1.3.0   No known vulnerabilities...
[203/281] readable-stream 1.1.14   No known vulnerabilities...
[204/281] isarray 0.0.1   No known vulnerabilities...
[205/281] string_decoder 0.10.31   No known vulnerabilities...
[206/281] stream-iterate 1.1.1   No known vulnerabilities...
[207/281] block-stream 0.0.8   No known vulnerabilities...
[208/281] text-table 0.2.0   No known vulnerabilities...
[209/281] uid-number 0.0.6   No known vulnerabilities...
[210/281] umask 1.1.0   No known vulnerabilities...
[211/281] unique-filename 1.1.0   No known vulnerabilities...
[212/281] unique-slug 2.0.0   No known vulnerabilities...
[213/281] unpipe 1.0.0   No known vulnerabilities...
[214/281] update-notifier 2.1.0   No known vulnerabilities...
[215/281] boxen 1.0.0   No known vulnerabilities...
[216/281] ansi-align 1.1.0   No known vulnerabilities...
[217/281] camelcase 4.0.0   No known vulnerabilities...
[218/281] cli-boxes 1.0.0   No known vulnerabilities...
[219/281] string-width 2.0.0   No known vulnerabilities...
[220/281] is-fullwidth-code-point 2.0.0   No known vulnerabilities...
[221/281] term-size 0.1.1   No known vulnerabilities...
[222/281] execa 0.4.0   No known vulnerabilities...
[223/281] cross-spawn-async 2.2.5   No known vulnerabilities...
[224/281] lru-cache 4.0.2   No known vulnerabilities...
[225/281] pseudomap 1.0.2   No known vulnerabilities...
[226/281] yallist 2.0.0   No known vulnerabilities...
[227/281] is-stream 1.1.0   No known vulnerabilities...
[228/281] npm-run-path 1.0.0   No known vulnerabilities...
[229/281] path-key 1.0.0   No known vulnerabilities...
[230/281] strip-eof 1.0.0   No known vulnerabilities...
[231/281] widest-line 1.0.0   No known vulnerabilities...
[232/281] chalk 1.1.3   No known vulnerabilities...
[233/281] ansi-styles 2.2.1   No known vulnerabilities...
[234/281] escape-string-regexp 1.0.5   No known vulnerabilities...
[235/281] has-ansi 2.0.0   No known vulnerabilities...
[236/281] supports-color 2.0.0   No known vulnerabilities...
[237/281] configstore 3.0.0   No known vulnerabilities...
[238/281] dot-prop 4.1.1   No known vulnerabilities...
[239/281] is-obj 1.0.1   No known vulnerabilities...
[240/281] unique-string 1.0.0   No known vulnerabilities...
[241/281] crypto-random-string 1.0.0   No known vulnerabilities...
[242/281] xdg-basedir 3.0.0   No known vulnerabilities...
[243/281] write-file-atomic 1.3.3   No known vulnerabilities...
[244/281] is-npm 1.0.0   No known vulnerabilities...
[245/281] latest-version 3.0.0   No known vulnerabilities...
[246/281] package-json 3.1.0   No known vulnerabilities...
[247/281] got 6.7.1   No known vulnerabilities...
[248/281] create-error-class 3.0.2   No known vulnerabilities...
[249/281] capture-stack-trace 1.0.0   No known vulnerabilities...
[250/281] duplexer3 0.1.4   No known vulnerabilities...
[251/281] get-stream 3.0.0   No known vulnerabilities...
[252/281] is-redirect 1.0.0   No known vulnerabilities...
[253/281] is-retry-allowed 1.1.0   No known vulnerabilities...
[254/281] lowercase-keys 1.0.0   No known vulnerabilities...
[255/281] timed-out 4.0.1   No known vulnerabilities...
[256/281] unzip-response 2.0.1   No known vulnerabilities...
[257/281] url-parse-lax 1.0.0   No known vulnerabilities...
[258/281] prepend-http 1.0.4   No known vulnerabilities...
[259/281] registry-auth-token 3.1.0   No known vulnerabilities...
[260/281] rc 1.1.7   No known vulnerabilities...
[261/281] deep-extend 0.4.1   No known vulnerabilities...
[262/281] minimist 1.2.0   No known vulnerabilities...
[263/281] strip-json-comments 2.0.1   No known vulnerabilities...
[264/281] registry-url 3.1.0   No known vulnerabilities...
[265/281] lazy-req 2.0.0   No known vulnerabilities...
[266/281] semver-diff 2.1.0   No known vulnerabilities...
[267/281] spdx-correct 1.0.2   No known vulnerabilities...
[268/281] spdx-license-ids 1.2.0   No known vulnerabilities...
[269/281] spdx-expression-parse 1.0.2   No known vulnerabilities...
[270/281] spdx-exceptions 1.0.4   No known vulnerabilities...
[271/281] builtins 1.0.3   No known vulnerabilities...
[272/281] isexe 2.0.0   No known vulnerabilities...
[273/281] ossindexjs 2.0.0   No known vulnerabilities...
[274/281] node-rest-client 1.8.0   No known vulnerabilities...
[275/281] debug 2.2.0   No known vulnerabilities...
[276/281] ms 0.7.1   No known vulnerabilities...
[277/281] xml2js 0.4.19   No known vulnerabilities...
[278/281] sax 1.2.4   No known vulnerabilities...
[279/281] xmlbuilder 9.0.4   No known vulnerabilities...
[280/281] semver 5.4.1   2 known vulnerabilities, 0 affecting installed version
[281/281] xmldom 0.1.27   No known vulnerabilities...
